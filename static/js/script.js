document.addEventListener('DOMContentLoaded', function() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const neonContainer = document.querySelector('.neon-container');
    if (neonContainer) {
        neonContainer.style.opacity = '0';
        setTimeout(() => {
            neonContainer.style.transition = 'opacity 0.8s ease';
            neonContainer.style.opacity = '1';
        }, 100);
    }
    
    // –£–¥–∞–ª–µ–Ω–∏–µ flash-—Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    const flashMessages = document.querySelectorAll('.flash');
    flashMessages.forEach(message => {
        setTimeout(() => {
            message.style.transition = 'opacity 0.5s ease';
            message.style.opacity = '0';
            setTimeout(() => message.remove(), 500);
        }, 5000);
    });
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
    const neonButtons = document.querySelectorAll('.neon-btn, .neon-link-btn');
    neonButtons.forEach(button => {
        button.addEventListener('mouseenter', function() {
            this.style.transition = 'all 0.3s ease';
        });
        
        button.addEventListener('mouseleave', function() {
            this.style.transition = 'all 0.3s ease';
        });
    });

    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –ª–µ–Ω—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π
document.addEventListener('DOMContentLoaded', function() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    animateElements();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
    const postButton = document.querySelector('.neon-post-input + .neon-btn');
    if (postButton) {
        postButton.addEventListener('click', function() {
            const postText = document.querySelector('.neon-post-input').value;
            if (postText.trim() !== '') {
                createPost('–í—ã', postText);
                document.querySelector('.neon-post-input').value = '';
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ª–∞–π–∫–æ–≤
    document.querySelectorAll('.post-like').forEach(likeBtn => {
        likeBtn.addEventListener('click', function() {
            this.classList.toggle('liked');
            if (this.classList.contains('liked')) {
                const currentLikes = parseInt(this.textContent.match(/\d+/) || 0);
                this.innerHTML = '‚ù§Ô∏è ' + (currentLikes + 1);
            } else {
                const currentLikes = parseInt(this.textContent.match(/\d+/) || 1);
                this.innerHTML = '‚ù§Ô∏è ' + (currentLikes - 1);
            }
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    const sendMessageBtn = document.querySelector('.message-compose .neon-btn');
    if (sendMessageBtn) {
        sendMessageBtn.addEventListener('click', function() {
            const messageText = document.querySelector('.message-compose textarea').value;
            if (messageText.trim() !== '') {
                // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã AJAX-–∑–∞–ø—Ä–æ—Å
                alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ' + messageText);
                document.querySelector('.message-compose textarea').value = '';
            }
        });
    }
});

function animateElements() {
    const elements = document.querySelectorAll('.neon-sidebar, .neon-main > *');
    elements.forEach((el, index) => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(20px)';
        setTimeout(() => {
            el.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
            el.style.opacity = '1';
            el.style.transform = 'translateY(0)';
        }, 100 + index * 100);
    });
}

function createPost(author, content) {
    const feed = document.querySelector('.neon-feed');
    if (!feed) return;
    
    const postHTML = `
        <div class="post" style="opacity: 0; transform: translateY(20px);">
            <div class="post-header">
                <div class="post-avatar">${author[0].toUpperCase()}</div>
                <div class="post-author">${author}</div>
                <div class="post-time">—Ç–æ–ª—å–∫–æ —á—Ç–æ</div>
            </div>
            <div class="post-content">${content}</div>
            <div class="post-actions">
                <button class="post-like">‚ù§Ô∏è 0</button>
                <button class="post-comment">üí¨ 0</button>
                <button class="post-share">‚ÜóÔ∏è –ü–æ–¥–µ–ª–∏—Ç—å—Å—è</button>
            </div>
        </div>
    `;
    
    const postContainer = document.createElement('div');
    postContainer.innerHTML = postHTML;
    const newPost = postContainer.firstChild;
    
    feed.insertBefore(newPost, feed.children[2]); // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è
    
    setTimeout(() => {
        newPost.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
        newPost.style.opacity = '1';
        newPost.style.transform = 'translateY(0)';
    }, 100);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    newPost.querySelector('.post-like').addEventListener('click', function() {
        this.classList.toggle('liked');
        if (this.classList.contains('liked')) {
            const currentLikes = parseInt(this.textContent.match(/\d+/) || 0);
            this.innerHTML = '‚ù§Ô∏è ' + (currentLikes + 1);
        } else {
            const currentLikes = parseInt(this.textContent.match(/\d+/) || 1);
            this.innerHTML = '‚ù§Ô∏è ' + (currentLikes - 1);
        }
    });
}
});
